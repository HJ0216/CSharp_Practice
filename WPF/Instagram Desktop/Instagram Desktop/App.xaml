<Application x:Class="Instagram_Desktop.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Instagram_Desktop"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style x:Key="mainText" TargetType="TextBlock">
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="#020202"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>

        <Style x:Key="secondaryText" TargetType="TextBlock">
            <Setter Property="Margin" Value="0 5 0 0"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="#9A9A9A"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <Style x:Key="menuButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#020202"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Padding" Value="0 3"/>
            <Setter Property="Margin" Value="0 0 0 5"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/> <!--기본 포커스 표시 스타일을 비활성화-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderThickness="0 0 2 0" BorderBrush="Transparent"
                                >
                            <ContentPresenter HorizontalAlignment="Stretch"
                                              VerticalAlignment="Center"
                                              />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#C5436D"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}"
                                        BorderThickness="0 0 2 0" BorderBrush="#C5436D"
                                        >
                                    <ContentPresenter HorizontalAlignment="Stretch"
                                                      VerticalAlignment="Center"
                                                      />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>

                <Trigger Property="IsMouseCaptured" Value="True">
                    <!--특정 UI 요소가 마우스의 상태를 추적하고, 마우스 입력을 다른 요소들로부터 차단하고 오직 자신만이 그 입력을 처리할 수 있도록 하는 것-->
                    <Setter Property="Background" Value="#E0E0E0"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="menuButtonIcon" TargetType="Image">
            <Setter Property="Width" Value="18"/>
            <Setter Property="Margin" Value="40 0 20 0"/>
        </Style>

        <Style x:Key="activeMenuButton" TargetType="Button" BasedOn="{StaticResource menuButton}">
            <Setter Property="Foreground" Value="#C5436D"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderThickness="0 0 2 0" BorderBrush="#C5436D"
                                >
                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="txtBlockHint" TargetType="TextBlock">
            <Setter Property="Panel.ZIndex" Value="1"/>
            <!--ZIndex: UI 요소의 쌓임 순서, 값이 높을수록 해당 요소는 더 위에 쌓임-->
            <Setter Property="Grid.Column" Value="1"/>
            <Setter Property="Margin" Value="10 0 0 0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="#ACB0AF"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <Style x:Key="txtBox" TargetType="TextBox">
            <Setter Property="Grid.Column" Value="1"/>
            <Setter Property="Margin" Value="10 0 0 0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Background" Value="#F3F3F3"/>
            <Setter Property="Foreground" Value="#878787"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <Style x:Key="roundButton" TargetType="Button">
            <Setter Property="Height" Value="33"/>
            <Setter Property="Width" Value="33"/>
            <Setter Property="Margin" Value="0 0 8 0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="50"
                                BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border CornerRadius="50"
                                        BorderThickness="1" BorderBrush="#AAAAAA"
                                        >
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>

                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border CornerRadius="50"
                                        BorderThickness="1" BorderBrush="#E0E0E0"
                                        >
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="addButton" TargetType="Button">
            <Setter Property="Height" Value="40"/>
            <Setter Property="Margin" Value="10 0 0 0"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#5F6368"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Padding="20 0" 
                                CornerRadius="5"
                                BorderThickness="0"
                                >
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0, 0.5" EndPoint="1, 0.5">
                                    <GradientStop Color="#E33D67"/>
                                    <GradientStop Color="#FAA847" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>

                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Padding="20 0"
                                        CornerRadius="5"
                                        BorderThickness="0"
                                        >
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0, 0.5" EndPoint="1, 0.5">
                                            <GradientStop Color="#E33D67" Offset="0.5"/>
                                            <GradientStop Color="#FAA847" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>

                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="txtButton" TargetType="Label">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label">
                        <TextBlock Foreground="#333333"
                                   FontSize="16" FontWeight="SemiBold"
                                   >
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </TextBlock>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Label">
                                <TextBlock Foreground="#333333"
                                           FontSize="16" FontWeight="SemiBold"
                                           >
                                    <TextBlock.TextDecorations>
                                        <TextDecoration Location="Underline" 
                                                        PenOffset="3"
                                                        />
                                        <!--PenOffset: 밑줄을 기준 위치보다 3픽셀 아래로 이동시키는 설정-->
                                    </TextBlock.TextDecorations>
                                    
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </TextBlock>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="activeTxtButton" TargetType="Label" BasedOn="{StaticResource txtButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label">
                        <TextBlock Foreground="#333333"
                                   FontSize="16" FontWeight="SemiBold"
                                   >
                            <TextBlock.TextDecorations>
                                <TextDecoration Location="Underline" PenOffset="3"/>
                            </TextBlock.TextDecorations>
                            
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </TextBlock>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarTrackThumb" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                       Width="Auto" Height="Auto"
                                       Fill="Transparent" 
                                       />
                            <Border x:Name="CornerScrollBarRectangle"
                                    CornerRadius="5"
                                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                    Width="Auto" Height="Auto"
                                    Margin="0 1"
                                    Background="{TemplateBinding Background}" 
                                    />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="CornerScrollBarRectangle" Property="Width" Value="Auto" />
                                <Setter TargetName="CornerScrollBarRectangle" Property="Height" Value="6" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Foreground" Value="#AAAAAA" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Width" Value="5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="5" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" /> <!--스크롤바가 좁고 슬림하게 보이도록 설정-->
                            </Grid.RowDefinitions>
                            <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="True" Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollBarTrackThumb}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp"
                                                  Command="ScrollBar.PageDownCommand"
                                                  Opacity="0"
                                                  Focusable="false"
                                                  />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown"
                                                  Command="ScrollBar.PageUpCommand"
                                                  Opacity="0"
                                                  Focusable="false"
                                                  />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                <Setter Value="#787878" TargetName="Thumb" Property="Background" />
                            </Trigger>
                            <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                <Setter Value="#787878" TargetName="Thumb" Property="Background" />
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="8" />
                                <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Application.Resources>
</Application>
